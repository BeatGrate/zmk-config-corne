/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-helpers/helper.h"
#include "includes/settings.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define COLEMAK 3

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

     
/ {
       combos {
                compatible = "zmk,combos";
                combo_esc {
                    timeout-ms = <50>;
                    key-positions = <19 20>;
                    bindings = <&kp ESC>;
                };
       };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSLH |
// |  CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | SQT  |
// | SHFT  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | GRAVE|
//   | GUI | L1 and ESC | LSHIFT and TAB |   |SPACE| L2 and BSPC | ENTER |
                        bindings = <
   &kp TAB    &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &kp LCTRL  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp GRAVE
          &kp LGUI  &lt 1 ESC &mt LSHFT TAB   &kp SPACE &lt 2 BSPC &kp RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $   |  %   |   |  ^   |  &   |  *  |  (   |  )  | DEL   |
// | TRANS| ALT | DEL |     |      |      |   | LEFT |  UP  |DOWN |RIGHT | HOME| END   |
// | TRANS|     |     |     |      |      |   |      |  -   |  =  |  {   |   } | ALT+. |
//                    |TRANS| TRANS|TRANS |   |TRANS | TRANS | TRANS |
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &trans  &kp LALT &kp DEL &none &none &none &kp LEFT &kp UP &kp DOWN &kp RIGHT &kp HOME &kp END
     &trans  &none &none &none &none &none &none &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &kp LA(DOT)
                            &trans     &trans   &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | TRANS|   1  |  2  |  3  |    4   |   5  |   |    6   |    7   |    8   |   9   |   0  |  TRANS |
// | TRANS|MPREV |MNEXT|MVOLD|  MVOLU |MPALY |   |        |    -   |    =   |   [   |   ]  |  TRANS |
// | TRANS| ALT  | DEL | COPY | PASTE |      |   | BTCLR  | BTPRV |  BTNXT  |       |      |  TRANS |
//                     | CTRL | ENT | TAB |   | BSPC | SPC | LSFT |
                        bindings = <
   &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6  &kp N7 &kp N8 &kp N9 &kp N0 &trans
   &trans &kp C_PREV &kp C_NEXT &kp C_VOL_DN   &kp C_VOL_UP &kp C_PP &none &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &trans
   &trans &kp LALT &kp DEL &kp K_COPY  &kp K_PASTE  &none   &bt BT_CLR &bt BT_PRV  &bt BT_NXT &none &none &trans
                             &mt LCTRL ESC  &trans  &none   &trans   &trans    &trans
                        >;
                };
        };
};